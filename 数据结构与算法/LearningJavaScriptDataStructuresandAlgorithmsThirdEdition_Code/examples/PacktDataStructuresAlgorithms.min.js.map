{"version":3,"file":"PacktDataStructuresAlgorithms.min.js","mappings":"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","sources":["webpack://PacktDataStructuresAlgorithms/webpack/universalModuleDefinition","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/backtracking/rat-in-maze.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/backtracking/sudoku-solver.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/dynamic-programing/knapsack-recursive.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/dynamic-programing/knapsack.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/dynamic-programing/longest-common-subsequence-print.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/dynamic-programing/longest-common-subsequence.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/dynamic-programing/matrix-chain-multiplication.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/dynamic-programing/min-coin-change.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/graph/breadth-first-search.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/graph/depth-first-search.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/graph/dijkstra.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/graph/floyd-warshall.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/graph/kruskal.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/graph/prim.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/greedy/knapsack.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/greedy/longest-common-subsequence.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/greedy/matrix-chain-multiplication.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/greedy/min-coin-change.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/search/binary-search-recursive.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/search/binary-search.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/search/interpolation-search.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/search/min-max-search.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/search/sequential-search.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/shuffle/fisher–yates.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/sorting/bubble-sort-improved.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/sorting/bubble-sort.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/sorting/bucket-sort.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/sorting/counting-sort.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/sorting/heap-sort.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/sorting/insertion-sort.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/sorting/merge-sort.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/sorting/quicksort.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/sorting/radix-sort.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/sorting/selection-sort.js","webpack://PacktDataStructuresAlgorithms/./src/js/algorithms/sorting/shell-sort.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/avl-tree.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/binary-search-tree.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/circular-linked-list.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/deque.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/dictionary.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/doubly-linked-list.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/graph.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/hash-table-linear-probing-lazy.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/hash-table-linear-probing.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/hash-table-separate-chaining.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/hash-table.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/heap.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/linked-list.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/models/linked-list-models.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/models/node.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/models/value-pair-lazy.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/models/value-pair.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/queue.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/set.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/sorted-linked-list.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/stack-array.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/stack-linked-list.js","webpack://PacktDataStructuresAlgorithms/./src/js/data-structures/stack.js","webpack://PacktDataStructuresAlgorithms/./src/js/index.js","webpack://PacktDataStructuresAlgorithms/./src/js/others/balanced-symbols.js","webpack://PacktDataStructuresAlgorithms/./src/js/others/base-converter.js","webpack://PacktDataStructuresAlgorithms/./src/js/others/factorial.js","webpack://PacktDataStructuresAlgorithms/./src/js/others/fibonacci.js","webpack://PacktDataStructuresAlgorithms/./src/js/others/hanoi.js","webpack://PacktDataStructuresAlgorithms/./src/js/others/hot-potato.js","webpack://PacktDataStructuresAlgorithms/./src/js/others/palindrome-checker.js","webpack://PacktDataStructuresAlgorithms/./src/js/util.js","webpack://PacktDataStructuresAlgorithms/webpack/bootstrap","webpack://PacktDataStructuresAlgorithms/webpack/before-startup","webpack://PacktDataStructuresAlgorithms/webpack/startup","webpack://PacktDataStructuresAlgorithms/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"PacktDataStructuresAlgorithms\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PacktDataStructuresAlgorithms\"] = factory();\n\telse\n\t\troot[\"PacktDataStructuresAlgorithms\"] = factory();\n})(self, () => {\nreturn ","function isSafe(maze, x, y) {\n  const n = maze.length;\n  if (x >= 0 && y >= 0 && x < n && y < n && maze[x][y] !== 0) {\n    return true;\n  }\n  return false;\n}\n\nfunction findPath(maze, x, y, solution) {\n  const n = maze.length;\n  if (x === n - 1 && y === n - 1) {\n    solution[x][y] = 1;\n    return true;\n  }\n  if (isSafe(maze, x, y) === true) {\n    solution[x][y] = 1;\n    if (findPath(maze, x + 1, y, solution)) {\n      return true;\n    }\n    if (findPath(maze, x, y + 1, solution)) {\n      return true;\n    }\n    solution[x][y] = 0;\n    return false;\n  }\n  return false;\n}\n\nexport function ratInAMaze(maze) {\n  const solution = [];\n  for (let i = 0; i < maze.length; i++) {\n    solution[i] = [];\n    for (let j = 0; j < maze[i].length; j++) {\n      solution[i][j] = 0;\n    }\n  }\n  if (findPath(maze, 0, 0, solution) === true) {\n    return solution;\n  }\n  return 'NO PATH FOUND';\n}\n","const UNASSIGNED = 0;\n\nfunction usedInRow(matrix, row, num) {\n  for (let col = 0; col < matrix.length; col++) {\n    if (matrix[row][col] === num) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction usedInCol(matrix, col, num) {\n  for (let row = 0; row < matrix.length; row++) {\n    if (matrix[row][col] === num) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction usedInBox(matrix, boxStartRow, boxStartCol, num) {\n  for (let row = 0; row < 3; row++) {\n    for (let col = 0; col < 3; col++) {\n      if (matrix[row + boxStartRow][col + boxStartCol] === num) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction isSafe(matrix, row, col, num) {\n  return (\n    !usedInRow(matrix, row, num) &&\n    !usedInCol(matrix, col, num) &&\n    !usedInBox(matrix, row - (row % 3), col - (col % 3), num)\n  );\n}\nfunction solveSudoku(matrix) {\n  let row = 0;\n  let col = 0;\n  let checkBlankSpaces = false;\n\n  for (row = 0; row < matrix.length; row++) {\n    for (col = 0; col < matrix[row].length; col++) {\n      if (matrix[row][col] === UNASSIGNED) {\n        checkBlankSpaces = true;\n        break;\n      }\n    }\n    if (checkBlankSpaces === true) {\n      break;\n    }\n  }\n  if (checkBlankSpaces === false) {\n    return true;\n  }\n\n  for (let num = 1; num <= 9; num++) {\n    if (isSafe(matrix, row, col, num)) {\n      matrix[row][col] = num;\n      if (solveSudoku(matrix)) {\n        return true;\n      }\n      matrix[row][col] = UNASSIGNED;\n    }\n  }\n  return false;\n}\n\nexport function sudokuSolver(matrix) {\n  if (solveSudoku(matrix) === true) {\n    return matrix;\n  }\n  return 'NO SOLUTION EXISTS!';\n}\n","export function knapSack(capacity, weights, values, n) {\n  if (n === 0 || capacity === 0) {\n    return 0;\n  }\n  if (weights[n - 1] > capacity) {\n    return knapSack(capacity, weights, values, n - 1);\n  }\n  const a = values[n - 1] + knapSack(capacity - weights[n - 1], weights, values, n - 1);\n  const b = knapSack(capacity, weights, values, n - 1);\n  return a > b ? a : b;\n}\n","function findValues(n, capacity, kS, weights, values) {\n  let i = n;\n  let k = capacity;\n  // console.log('Items that are part of the solution:');\n  while (i > 0 && k > 0) {\n    if (kS[i][k] !== kS[i - 1][k]) {\n      console.log(\n        `item${i} can be part of solution w,v: ${weights[i - 1]},${\n          values[i - 1]\n        }`\n      );\n      k -= weights[i - 1];\n      i--;\n    } else {\n      i--;\n    }\n  }\n}\n\n/*\n  总体思想是要求出放入第i个物品时最大价值是多少，那么先求减去该物品重量剩余重量的最大价值是多少，一直到第一个物品的价值\n*/\nexport function knapSack(capacity, weights, values, n) {\n  const kS = [];\n  for (let x = 0; x <= n; x++) {\n    kS[x] = [];\n  }\n  for (let i = 0; i <= n; i++) {\n    for (let w = 0; w <= capacity; w++) {\n      if (i === 0 || w === 0) {\n        kS[i][w] = 0;\n      } else if (weights[i - 1] <= w) {\n        const a = values[i - 1] + kS[i - 1][w - weights[i - 1]];\n        const b = kS[i - 1][w];\n        kS[i][w] = a > b ? a : b; // max(a,b)\n        // console.log(a + ' can be part of the solution');\n      } else {\n        // 当物品的重量超过约束重量时用之前该重量方案的值\n        kS[i][w] = kS[i - 1][w];\n      }\n    }\n    // console.log(kS[i].join());\n  }\n  // extra algorithm to find the items that are part of the solution\n  findValues(n, capacity, kS, weights, values);\n  return kS[n][capacity];\n}\n","function printSolution(solution, wordX, m, n) {\n  let a = m;\n  let b = n;\n  let x = solution[a][b];\n  let answer = '';\n  while (x !== '0') {\n    if (solution[a][b] === 'diagonal') {\n      answer = wordX[a - 1] + answer;\n      a--;\n      b--;\n    } else if (solution[a][b] === 'left') {\n      b--;\n    } else if (solution[a][b] === 'top') {\n      a--;\n    }\n    x = solution[a][b];\n  }\n  return answer;\n}\nexport function lcs(wordX, wordY) {\n  const m = wordX.length;\n  const n = wordY.length;\n  const l = [];\n  const solution = [];\n  for (let i = 0; i <= m; i++) {\n    l[i] = [];\n    solution[i] = [];\n    for (let j = 0; j <= n; j++) {\n      l[i][j] = 0;\n      solution[i][j] = '0';\n    }\n  }\n  for (let i = 0; i <= m; i++) {\n    for (let j = 0; j <= n; j++) {\n      if (i === 0 || j === 0) {\n        l[i][j] = 0;\n      } else if (wordX[i - 1] === wordY[j - 1]) {\n        l[i][j] = l[i - 1][j - 1] + 1;\n        solution[i][j] = 'diagonal';\n      } else {\n        const a = l[i - 1][j];\n        const b = l[i][j - 1];\n        l[i][j] = a > b ? a : b; // max(a,b)\n        solution[i][j] = l[i][j] === l[i - 1][j] ? 'top' : 'left';\n      }\n    }\n    // console.log(l[i].join());\n    // console.log(solution[i].join());\n  }\n  return printSolution(solution, wordX, m, n);\n}\n","/*\n  总体思路和背包问题差不多，找到第n个相同序列 = 找到第n-1个序列的值 + 1\n*/\nexport function lcs(wordX, wordY) {\n  const m = wordX.length;\n  const n = wordY.length;\n  const l = [];\n  for (let i = 0; i <= m; i++) {\n    l[i] = [];\n    for (let j = 0; j <= n; j++) {\n      l[i][j] = 0;\n    }\n  }\n  for (let i = 0; i <= m; i++) {\n    for (let j = 0; j <= n; j++) {\n      if (i === 0 || j === 0) {\n        l[i][j] = 0;\n      } else if (wordX[i - 1] === wordY[j - 1]) {\n        l[i][j] = l[i - 1][j - 1] + 1;\n      } else {\n        const a = l[i - 1][j];\n        const b = l[i][j - 1];\n        l[i][j] = a > b ? a : b; // max(a,b)\n      }\n    }\n    // console.log(l[i].join());\n  }\n  return l[m][n];\n}\n","/*\n  看视频：https://www.youtube.com/watch?v=prx1psByp7U\n*/\nfunction printOptimalParenthesis(s, i, j) {\n  if (i === j) {\n    console.log(`A[${i}]`);\n  } else {\n    console.log(\"(\");\n    printOptimalParenthesis(s, i, s[i][j]);\n    printOptimalParenthesis(s, s[i][j] + 1, j);\n    console.log(\")\");\n  }\n}\n\nexport function matrixChainOrder(p) {\n  const n = p.length;\n  const m = [];\n  const s = [];\n  for (let x = 1; x <= n; x++) {\n    m[x] = [];\n    m[x][x] = 0;\n  }\n  for (let y = 0; y <= n; y++) {\n    // to help printing the optimal solution\n    s[y] = []; // auxiliary\n    for (let z = 0; z <= n; z++) {\n      s[y][z] = 0;\n    }\n  }\n  for (let l = 2; l < n; l++) {\n    for (let i = 1; i < n - l + 1; i++) {\n      const j = i + l - 1;\n      m[i][j] = Number.MAX_SAFE_INTEGER;\n      for (let k = i; k <= j - 1; k++) {\n        // q = cost/scalar multiplications\n        const q = m[i][k] + m[k + 1][j] + p[i - 1] * p[k] * p[j];\n        if (q < m[i][j]) {\n          m[i][j] = q;\n          s[i][j] = k; // s[i,j] = Second auxiliary table that stores k\n        }\n      }\n    }\n  }\n  // console.log(m);\n  // console.log(s);\n  printOptimalParenthesis(s, 1, n - 1);\n  return m[1][n - 1];\n}\n","/*\n  总体思想是要找零n的最小硬币数，那么先找n-1的最小硬币数，一直到1的最小硬币数\n  跟爬楼梯是一样的思路\n*/\n\nexport function minCoinChange(coins, amount) {\n  const cache = [];\n\n  const makeChange = (value) => {\n    if (!value) {\n      return [];\n    }\n    if (cache[value]) {\n      return cache[value];\n    }\n    // 存储的是找零value的最小硬币数\n    let min = [];\n    let newMin;\n    let newAmount;\n    for (let i = 0; i < coins.length; i++) {\n      const coin = coins[i];\n      newAmount = value - coin;\n      if (newAmount >= 0) {\n        newMin = makeChange(newAmount);\n      }\n      if (\n        newAmount >= 0 &&\n        // 前面已经找到一个最小硬币数方案 或 第一次找到这个方案的情况\n        (newMin.length < min.length - 1 || !min.length) &&\n        // 确实能找到 newAmount的最小硬币数方案 或 value本身就是最小硬币数方案\n        (newMin.length || !newAmount)\n      ) {\n        min = [coin].concat(newMin);\n        // console.log('new Min ' + min + ' for ' + amount);\n      }\n    }\n    return (cache[value] = min);\n  };\n  return makeChange(amount);\n}\n","import Queue from '../../data-structures/queue';\n\nconst Colors = {\n  WHITE: 0,\n  GREY: 1,\n  BLACK: 2\n};\n\nconst initializeColor = vertices => {\n  const color = {};\n  for (let i = 0; i < vertices.length; i++) {\n    color[vertices[i]] = Colors.WHITE;\n  }\n  return color;\n};\n\nexport const breadthFirstSearch = (graph, startVertex, callback) => {\n  const vertices = graph.getVertices();\n  const adjList = graph.getAdjList();\n  const color = initializeColor(vertices);\n  const queue = new Queue();\n\n  queue.enqueue(startVertex);\n\n  while (!queue.isEmpty()) {\n    const u = queue.dequeue();\n    const neighbors = adjList.get(u);\n    color[u] = Colors.GREY;\n    for (let i = 0; i < neighbors.length; i++) {\n      const w = neighbors[i];\n      if (color[w] === Colors.WHITE) {\n        color[w] = Colors.GREY;\n        queue.enqueue(w);\n      }\n    }\n    color[u] = Colors.BLACK;\n    if (callback) {\n      callback(u);\n    }\n  }\n};\n\nexport const BFS = (graph, startVertex) => {\n  const vertices = graph.getVertices();\n  const adjList = graph.getAdjList();\n  const color = initializeColor(vertices);\n  const queue = new Queue();\n  const distances = {};\n  const predecessors = {};\n  queue.enqueue(startVertex);\n  for (let i = 0; i < vertices.length; i++) {\n    distances[vertices[i]] = 0;\n    predecessors[vertices[i]] = null;\n  }\n  while (!queue.isEmpty()) {\n    const u = queue.dequeue();\n    const neighbors = adjList.get(u);\n    color[u] = Colors.GREY;\n    for (let i = 0; i < neighbors.length; i++) {\n      const w = neighbors[i];\n      if (color[w] === Colors.WHITE) {\n        color[w] = Colors.GREY;\n        distances[w] = distances[u] + 1;\n        predecessors[w] = u;\n        queue.enqueue(w);\n      }\n    }\n    color[u] = Colors.BLACK;\n  }\n  return {\n    distances,\n    predecessors\n  };\n};\n","// import Graph from '../../data-structures/graph';\n\nconst Colors = {\n  WHITE: 0,\n  GREY: 1,\n  BLACK: 2\n};\n\nconst initializeColor = vertices => {\n  const color = {};\n  for (let i = 0; i < vertices.length; i++) {\n    color[vertices[i]] = Colors.WHITE;\n  }\n  return color;\n};\n\nconst depthFirstSearchVisit = (u, color, adjList, callback) => {\n  color[u] = Colors.GREY;\n  if (callback) {\n    callback(u);\n  }\n  // console.log('Discovered ' + u);\n  const neighbors = adjList.get(u);\n  for (let i = 0; i < neighbors.length; i++) {\n    const w = neighbors[i];\n    if (color[w] === Colors.WHITE) {\n      depthFirstSearchVisit(w, color, adjList, callback);\n    }\n  }\n  color[u] = Colors.BLACK;\n  // console.log('explored ' + u);\n};\n\nexport const depthFirstSearch = (graph, callback) => {\n  const vertices = graph.getVertices();\n  const adjList = graph.getAdjList();\n  const color = initializeColor(vertices);\n\n  for (let i = 0; i < vertices.length; i++) {\n    if (color[vertices[i]] === Colors.WHITE) {\n      depthFirstSearchVisit(vertices[i], color, adjList, callback);\n    }\n  }\n};\n\nconst DFSVisit = (u, color, d, f, p, time, adjList) => {\n  // console.log('discovered ' + u);\n  color[u] = Colors.GREY;\n  d[u] = ++time.count;\n  const neighbors = adjList.get(u);\n  for (let i = 0; i < neighbors.length; i++) {\n    const w = neighbors[i];\n    if (color[w] === Colors.WHITE) {\n      p[w] = u;\n      DFSVisit(w, color, d, f, p, time, adjList);\n    }\n  }\n  color[u] = Colors.BLACK;\n  f[u] = ++time.count;\n  // console.log('explored ' + u);\n};\n\nexport const DFS = graph => {\n  const vertices = graph.getVertices();\n  const adjList = graph.getAdjList();\n  const color = initializeColor(vertices);\n  const d = {};\n  const f = {};\n  const p = {};\n  const time = { count: 0 };\n  for (let i = 0; i < vertices.length; i++) {\n    f[vertices[i]] = 0;\n    d[vertices[i]] = 0;\n    p[vertices[i]] = null;\n  }\n  for (let i = 0; i < vertices.length; i++) {\n    if (color[vertices[i]] === Colors.WHITE) {\n      DFSVisit(vertices[i], color, d, f, p, time, adjList);\n    }\n  }\n  return {\n    discovery: d,\n    finished: f,\n    predecessors: p\n  };\n};\n","const INF = Number.MAX_SAFE_INTEGER;\nconst minDistance = (dist, visited) => {\n  let min = INF;\n  let minIndex = -1;\n  for (let v = 0; v < dist.length; v++) {\n    if (visited[v] === false && dist[v] <= min) {\n      min = dist[v];\n      minIndex = v;\n    }\n  }\n  return minIndex;\n};\nexport const dijkstra = (graph, src) => {\n  const dist = [];\n  const visited = [];\n  const { length } = graph;\n  for (let i = 0; i < length; i++) {\n    dist[i] = INF;\n    visited[i] = false;\n  }\n  dist[src] = 0;\n  for (let i = 0; i < length - 1; i++) {\n    const u = minDistance(dist, visited);\n    visited[u] = true;\n    for (let v = 0; v < length; v++) {\n      if (!visited[v] && graph[u][v] !== 0 && dist[u] !== INF && dist[u] + graph[u][v] < dist[v]) {\n        dist[v] = dist[u] + graph[u][v];\n      }\n    }\n  }\n  return dist;\n};\n","export const floydWarshall = graph => {\n  const dist = [];\n  const { length } = graph;\n  for (let i = 0; i < length; i++) {\n    dist[i] = [];\n    for (let j = 0; j < length; j++) {\n      if (i === j) {\n        dist[i][j] = 0;\n      } else if (!isFinite(graph[i][j])) {\n        dist[i][j] = Infinity;\n      } else {\n        dist[i][j] = graph[i][j];\n      }\n    }\n  }\n  for (let k = 0; k < length; k++) {\n    for (let i = 0; i < length; i++) {\n      for (let j = 0; j < length; j++) {\n        if (dist[i][k] + dist[k][j] < dist[i][j]) {\n          dist[i][j] = dist[i][k] + dist[k][j];\n        }\n      }\n    }\n  }\n  return dist;\n};\n","const INF = Number.MAX_SAFE_INTEGER;\nconst find = (i, parent) => {\n  while (parent[i]) {\n    i = parent[i]; // eslint-disable-line prefer-destructuring\n  }\n  return i;\n};\nconst union = (i, j, parent) => {\n  if (i !== j) {\n    parent[j] = i;\n    return true;\n  }\n  return false;\n};\nconst initializeCost = graph => {\n  const cost = [];\n  const { length } = graph;\n  for (let i = 0; i < length; i++) {\n    cost[i] = [];\n    for (let j = 0; j < length; j++) {\n      if (graph[i][j] === 0) {\n        cost[i][j] = INF;\n      } else {\n        cost[i][j] = graph[i][j];\n      }\n    }\n  }\n  return cost;\n};\nexport const kruskal = graph => {\n  const { length } = graph;\n  const parent = [];\n  let ne = 0;\n  let a;\n  let b;\n  let u;\n  let v;\n  const cost = initializeCost(graph);\n  while (ne < length - 1) {\n    for (let i = 0, min = INF; i < length; i++) {\n      for (let j = 0; j < length; j++) {\n        if (cost[i][j] < min) {\n          min = cost[i][j];\n          a = u = i;\n          b = v = j;\n        }\n      }\n    }\n    u = find(u, parent);\n    v = find(v, parent);\n    if (union(u, v, parent)) {\n      ne++;\n    }\n    cost[a][b] = cost[b][a] = INF;\n  }\n  return parent;\n};\n","const INF = Number.MAX_SAFE_INTEGER;\nconst minKey = (graph, key, visited) => {\n  // Initialize min value\n  let min = INF;\n  let minIndex = 0;\n  for (let v = 0; v < graph.length; v++) {\n    if (visited[v] === false && key[v] < min) {\n      min = key[v];\n      minIndex = v;\n    }\n  }\n  return minIndex;\n};\nexport const prim = graph => {\n  const parent = [];\n  const key = [];\n  const visited = [];\n  const { length } = graph;\n  for (let i = 0; i < length; i++) {\n    key[i] = INF;\n    visited[i] = false;\n  }\n  key[0] = 0;\n  parent[0] = -1;\n  for (let i = 0; i < length - 1; i++) {\n    const u = minKey(graph, key, visited);\n    visited[u] = true;\n    for (let v = 0; v < length; v++) {\n      if (graph[u][v] && !visited[v] && graph[u][v] < key[v]) {\n        parent[v] = u;\n        key[v] = graph[u][v];\n      }\n    }\n  }\n  return parent;\n};\n","export function knapSack(capacity, weights, values) {\n  const n = values.length;\n  let load = 0;\n  let val = 0;\n  for (let i = 0; i < n && load < capacity; i++) {\n    if (weights[i] <= capacity - load) {\n      val += values[i];\n      load += weights[i];\n      // console.log('using item ' + (i + 1) + ' for the solution');\n    } else {\n      const r = (capacity - load) / weights[i];\n      val += r * values[i];\n      load += weights[i];\n      // console.log('using ratio of ' + r + ' for item ' + (i + 1) + ' for the solution');\n    }\n  }\n  return val;\n}\n","export function lcs(wordX, wordY, m = wordX.length, n = wordY.length) {\n  if (m === 0 || n === 0) {\n    return 0;\n  }\n  if (wordX[m - 1] === wordY[n - 1]) {\n    return 1 + lcs(wordX, wordY, m - 1, n - 1);\n  }\n  const a = lcs(wordX, wordY, m, n - 1);\n  const b = lcs(wordX, wordY, m - 1, n);\n  return a > b ? a : b;\n}\n","export function matrixChainOrder(p, i = 1, j = p.length - 1) {\n  if (i === j) {\n    return 0;\n  }\n  let min = Number.MAX_SAFE_INTEGER;\n  for (let k = i; k < j; k++) {\n    const count =\n      matrixChainOrder(p, i, k) + matrixChainOrder(p, k + 1, j) + ((p[i - 1] * p[k]) * p[j]);\n    if (count < min) {\n      min = count;\n    }\n  }\n  return min;\n}\n","export function minCoinChange(coins, amount) {\n  const change = [];\n  let total = 0;\n  for (let i = coins.length; i >= 0; i--) {\n    const coin = coins[i];\n    while (total + coin <= amount) {\n      change.push(coin);\n      total += coin;\n    }\n  }\n  return change;\n}\n","import { Compare, defaultCompare, DOES_NOT_EXIST } from '../../util';\nimport { quickSort } from '../sorting/quicksort';\n\nfunction binarySearchRecursive(array, value, low, high, compareFn = defaultCompare) {\n  if (low <= high) {\n    const mid = Math.floor((low + high) / 2);\n    const element = array[mid];\n    if (compareFn(element, value) === Compare.LESS_THAN) {\n      return binarySearchRecursive(array, value, mid + 1, high, compareFn);\n    }\n    if (compareFn(element, value) === Compare.BIGGER_THAN) {\n      return binarySearchRecursive(array, value, low, mid - 1, compareFn);\n    }\n    return mid;\n  }\n  return DOES_NOT_EXIST;\n}\n\nexport function binarySearch(array, value, compareFn = defaultCompare) {\n  const sortedArray = quickSort(array);\n  const low = 0;\n  const high = sortedArray.length - 1;\n  return binarySearchRecursive(array, value, low, high, compareFn);\n}\n","import { Compare, defaultCompare, DOES_NOT_EXIST } from '../../util';\nimport { quickSort } from '../sorting/quicksort';\n\nexport function binarySearch(array, value, compareFn = defaultCompare) {\n  const sortedArray = quickSort(array);\n  let low = 0;\n  let high = sortedArray.length - 1;\n  while (low <= high) {\n    const mid = Math.floor((low + high) / 2);\n    const element = sortedArray[mid];\n    // console.log('mid element is ' + element);\n    if (compareFn(element, value) === Compare.LESS_THAN) {\n      low = mid + 1;\n      // console.log('low is ' + low);\n    } else if (compareFn(element, value) === Compare.BIGGER_THAN) {\n      high = mid - 1;\n      // console.log('high is ' + high);\n    } else {\n      // console.log('found it');\n      return mid;\n    }\n  }\n  return DOES_NOT_EXIST;\n}\n","import {\n  biggerEquals,\n  Compare,\n  defaultCompare,\n  defaultEquals,\n  defaultDiff,\n  DOES_NOT_EXIST,\n  lesserEquals,\n} from \"../../util.js\";\n\nexport function interpolationSearch(\n  array,\n  value,\n  compareFn = defaultCompare,\n  equalsFn = defaultEquals,\n  diffFn = defaultDiff\n) {\n  const { length } = array;\n  let low = 0;\n  let high = length - 1;\n  let position = -1;\n  let delta = -1;\n  while (\n    low <= high &&\n    biggerEquals(value, array[low], compareFn) &&\n    lesserEquals(value, array[high], compareFn)\n  ) {\n    delta = diffFn(value, array[low]) / diffFn(array[high], array[low]);\n    position = low + Math.floor((high - low) * delta);\n    if (equalsFn(array[position], value)) {\n      return position;\n    }\n    if (compareFn(array[position], value) === Compare.LESS_THAN) {\n      low = position + 1;\n    } else {\n      high = position - 1;\n    }\n  }\n  return DOES_NOT_EXIST;\n}\n\nconst arr = [2, 6, 7, 8, 16, 32];\nconsole.log(interpolationSearch(arr, 16));\n","import { defaultCompare, Compare } from '../../util';\n\nexport function findMaxValue(array, compareFn = defaultCompare) {\n  if (array && array.length > 0) {\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n      if (compareFn(max, array[i]) === Compare.LESS_THAN) {\n        max = array[i];\n      }\n    }\n    return max;\n  }\n  return undefined;\n}\nexport function findMinValue(array, compareFn = defaultCompare) {\n  if (array && array.length > 0) {\n    let min = array[0];\n    for (let i = 1; i < array.length; i++) {\n      if (compareFn(min, array[i]) === Compare.BIGGER_THAN) {\n        min = array[i];\n      }\n    }\n    return min;\n  }\n  return undefined;\n}\n","import { defaultEquals, DOES_NOT_EXIST } from '../../util';\n\nexport function sequentialSearch(array, value, equalsFn = defaultEquals) {\n  for (let i = 0; i < array.length; i++) {\n    if (equalsFn(value, array[i])) {\n      return i;\n    }\n  }\n  return DOES_NOT_EXIST;\n}\n","import { swap } from '../../util';\n\nexport function shuffle(array) {\n  let currentIndex = array.length;\n  while (currentIndex !== 0) {\n    const randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    swap(array, currentIndex, randomIndex);\n  }\n  return array;\n}\n","import { Compare, defaultCompare, swap } from '../../util';\n\nexport function modifiedBubbleSort(array, compareFn = defaultCompare) {\n  const { length } = array;\n  for (let i = 0; i < length; i++) {\n    // console.log('--- ');\n    for (let j = 0; j < length - 1 - i; j++) {\n      // console.log('compare ' + array[j] + ' with ' + array[j + 1]);\n      if (compareFn(array[j], array[j + 1]) === Compare.BIGGER_THAN) {\n        // console.log('swap ' + array[j] + ' with ' + array[j + 1]);\n        swap(array, j, j + 1);\n      }\n    }\n  }\n  return array;\n}\n","import { Compare, defaultCompare, swap } from '../../util';\n\nexport function bubbleSort(array, compareFn = defaultCompare) {\n  const { length } = array;\n  for (let i = 0; i < length; i++) {\n    // console.log('--- ');\n    for (let j = 0; j < length - 1; j++) {\n      // console.log('compare ' + array[j] + ' with ' + array[j + 1]);\n      if (compareFn(array[j], array[j + 1]) === Compare.BIGGER_THAN) {\n        // console.log('swap ' + array[j] + ' with ' + array[j + 1]);\n        swap(array, j, j + 1);\n      }\n    }\n  }\n  return array;\n}\n","import { insertionSort } from \"./insertion-sort\";\n\nfunction createBuckets(array, bucketSize) {\n  let minValue = array[0];\n  let maxValue = array[0];\n  for (let i = 1; i < array.length; i++) {\n    if (array[i] < minValue) {\n      minValue = array[i];\n    } else if (array[i] > maxValue) {\n      maxValue = array[i];\n    }\n  }\n  // 这里为什么不是减 0 来分析？因为有负数的情况\n  const bucketCount = Math.floor((maxValue - minValue) / bucketSize) + 1;\n  const buckets = [];\n  for (let i = 0; i < bucketCount; i++) {\n    buckets[i] = [];\n  }\n  for (let i = 0; i < array.length; i++) {\n    buckets[Math.floor((array[i] - minValue) / bucketSize)].push(array[i]);\n  }\n  return buckets;\n}\nfunction sortBuckets(buckets) {\n  const sortedArray = [];\n  for (let i = 0; i < buckets.length; i++) {\n    if (buckets[i] != null) {\n      insertionSort(buckets[i]);\n      sortedArray.push(...buckets[i]);\n    }\n  }\n  return sortedArray;\n}\nexport function bucketSort(array, bucketSize = 5) {\n  if (array.length < 2) {\n    return array;\n  }\n  const buckets = createBuckets(array, bucketSize);\n  return sortBuckets(buckets);\n}\n","import { findMaxValue } from '../search/min-max-search';\n\nexport function countingSort(array) {\n  if (array.length < 2) {\n    return array;\n  }\n  const maxValue = findMaxValue(array);\n  let sortedIndex = 0;\n  const counts = new Array(maxValue + 1);\n  array.forEach(element => {\n    if (!counts[element]) {\n      counts[element] = 0;\n    }\n    counts[element]++;\n  });\n  // console.log('Frequencies: ' + counts.join());\n  counts.forEach((element, i) => {\n    while (element > 0) {\n      array[sortedIndex++] = i;\n      element--;\n    }\n  });\n  return array;\n}\n","import { defaultCompare, swap } from '../../util';\n\nfunction heapify(array, index, heapSize, compareFn) {\n  let largest = index;\n  const left = (2 * index) + 1;\n  const right = (2 * index) + 2;\n  if (left < heapSize && compareFn(array[left], array[index]) > 0) {\n    largest = left;\n  }\n  if (right < heapSize && compareFn(array[right], array[largest]) > 0) {\n    largest = right;\n  }\n  if (largest !== index) {\n    swap(array, index, largest);\n    heapify(array, largest, heapSize, compareFn);\n  }\n}\n\nfunction buildMaxHeap(array, compareFn) {\n  for (let i = Math.floor(array.length / 2); i >= 0; i -= 1) {\n    heapify(array, i, array.length, compareFn);\n  }\n  return array;\n}\n\nexport default function heapSort(array, compareFn = defaultCompare) {\n  let heapSize = array.length;\n  buildMaxHeap(array, compareFn);\n  while (heapSize > 1) {\n    swap(array, 0, --heapSize);\n    heapify(array, 0, heapSize, compareFn);\n  }\n  return array;\n}\n","import { Compare, defaultCompare } from '../../util';\n\nexport const insertionSort = (array, compareFn = defaultCompare) => {\n  const { length } = array;\n  let temp;\n  for (let i = 1; i < length; i++) {\n    let j = i;\n    temp = array[i];\n    // console.log('to be inserted ' + temp);\n    while (j > 0 && compareFn(array[j - 1], temp) === Compare.BIGGER_THAN) {\n      // console.log('shift ' + array[j - 1]);\n      array[j] = array[j - 1];\n      j--;\n    }\n    // console.log('insert ' + temp);\n    array[j] = temp;\n  }\n  return array;\n};\n","import { Compare, defaultCompare } from '../../util';\n\nfunction merge(left, right, compareFn) {\n  let i = 0;\n  let j = 0;\n  const result = [];\n  while (i < left.length && j < right.length) {\n    result.push(compareFn(left[i], right[j]) === Compare.LESS_THAN ? left[i++] : right[j++]);\n  }\n  return result.concat(i < left.length ? left.slice(i) : right.slice(j));\n}\nexport function mergeSort(array, compareFn = defaultCompare) {\n  if (array.length > 1) {\n    const { length } = array;\n    const middle = Math.floor(length / 2);\n    const left = mergeSort(array.slice(0, middle), compareFn);\n    const right = mergeSort(array.slice(middle, length), compareFn);\n    array = merge(left, right, compareFn);\n  }\n  return array;\n}\n","import { swap } from \"../../util\";\n\nfunction partition(array, left, right) {\n  const pivotIdx = Math.floor((right + left) / 2);\n  const pivot = array[pivotIdx];\n  let i = left;\n  let j = right;\n\n  while (i < j) {\n    while (i < j && array[j] >= pivot) {\n      j--;\n    }\n    while (i < j && array[i] <= pivot) {\n      i++;\n    }\n\n    if (i < j) {\n      swap(array, i, j);\n      i++;\n      j--;\n    }\n  }\n  // 例如 5 是 pivot\n  // · 2 6 ·· 5 ···\n  if (i < pivotIdx) {\n    // 例如 i,j 指针在 2 处重合\n    if (array[i] < array[pivotIdx]) {\n      i += 1;\n    }\n    swap(array, i, pivotIdx);\n  } // ··· 5 ·· 2 6 ·\n  else if (i > pivotIdx) {\n    // 例如 i,j 指针在 6 处重合\n    if (array[i] > array[pivotIdx]) {\n      i -= 1;\n    }\n    swap(array, i, pivotIdx);\n  }\n  return i;\n}\nfunction quick(array, left, right) {\n  if (left >= right) {\n    return array;\n  }\n  const index = partition(array, left, right);\n  quick(array, left, index - 1);\n  quick(array, index + 1, right);\n  return array;\n}\nexport function quickSort(array) {\n  return quick(array, 0, array.length - 1);\n}\n","import { findMaxValue, findMinValue } from '../search/min-max-search';\n\nconst getBucketIndex = (value, minValue, significantDigit, radixBase) =>\n  Math.floor(((value - minValue) / significantDigit) % radixBase);\n\nconst countingSortForRadix = (array, radixBase, significantDigit, minValue) => {\n  let bucketsIndex;\n  const buckets = [];\n  const aux = [];\n  for (let i = 0; i < radixBase; i++) {\n    buckets[i] = 0;\n  }\n  for (let i = 0; i < array.length; i++) {\n    bucketsIndex = getBucketIndex(array[i], minValue, significantDigit, radixBase);\n    buckets[bucketsIndex]++;\n  }\n  for (let i = 1; i < radixBase; i++) {\n    buckets[i] += buckets[i - 1];\n  }\n  for (let i = array.length - 1; i >= 0; i--) {\n    bucketsIndex = getBucketIndex(array[i], minValue, significantDigit, radixBase);\n    aux[--buckets[bucketsIndex]] = array[i];\n  }\n  for (let i = 0; i < array.length; i++) {\n    array[i] = aux[i];\n  }\n  return array;\n};\nexport function radixSort(array, radixBase = 10) {\n  if (array.length < 2) {\n    return array;\n  }\n  const minValue = findMinValue(array);\n  const maxValue = findMaxValue(array);\n  // Perform counting sort for each significant digit, starting at 1\n  let significantDigit = 1;\n  while ((maxValue - minValue) / significantDigit >= 1) {\n    // console.log('radix sort for digit ' + significantDigit);\n    array = countingSortForRadix(array, radixBase, significantDigit, minValue);\n    // console.log(array.join());\n    significantDigit *= radixBase;\n  }\n  return array;\n}\n","import { Compare, defaultCompare, swap } from \"../../util\";\n\n// 与冒泡排序不同，不会在每次比较的时候调转位置，只会在内部循环结束时交换一次位置\nexport const selectionSort = (array, compareFn = defaultCompare) => {\n  const { length } = array;\n  let indexMin;\n  for (let i = 0; i < length - 1; i++) {\n    indexMin = i;\n    // wsd\n    // for (let j = i; j < length; j++) {\n    for (let j = i + 1; j < length; j++) {\n      if (compareFn(array[indexMin], array[j]) === Compare.BIGGER_THAN) {\n        // console.log('new index min ' + array[j]);\n        indexMin = j;\n      }\n    }\n    if (i !== indexMin) {\n      swap(array, i, indexMin);\n    }\n  }\n  return array;\n};\n","import { Compare, defaultCompare } from '../../util';\n\nexport function shellSort(array, compareFn = defaultCompare) {\n  let increment = array.length / 2;\n  while (increment > 0) {\n    for (let i = increment; i < array.length; i++) {\n      let j = i;\n      const temp = array[i];\n      while (j >= increment && compareFn(array[j - increment], temp) === Compare.BIGGER_THAN) {\n        array[j] = array[j - increment];\n        j -= increment;\n      }\n      array[j] = temp;\n    }\n    if (increment === 2) {\n      increment = 1;\n    } else {\n      increment = Math.floor((increment * 5) / 11);\n    }\n  }\n  return array;\n}\n","import { Compare, defaultCompare } from '../util';\nimport BinarySearchTree from './binary-search-tree';\nimport { Node } from './models/node';\n\nconst BalanceFactor = {\n  UNBALANCED_RIGHT: 1,\n  SLIGHTLY_UNBALANCED_RIGHT: 2,\n  BALANCED: 3,\n  SLIGHTLY_UNBALANCED_LEFT: 4,\n  UNBALANCED_LEFT: 5\n};\n\nexport default class AVLTree extends BinarySearchTree {\n  constructor(compareFn = defaultCompare) {\n    super(compareFn);\n    this.compareFn = compareFn;\n    this.root = null;\n  }\n  getNodeHeight(node) {\n    if (node == null) {\n      return -1;\n    }\n    return Math.max(this.getNodeHeight(node.left), this.getNodeHeight(node.right)) + 1;\n  }\n  /**\n   * Left left case: rotate right\n   *\n   *       b                           a\n   *      / \\                         / \\\n   *     a   e -> rotationLL(b) ->   c   b\n   *    / \\                             / \\\n   *   c   d                           d   e\n   *\n   * @param node Node<T>\n   */\n  rotationLL(node) {\n    const tmp = node.left;\n    node.left = tmp.right;\n    tmp.right = node;\n    return tmp;\n  }\n  /**\n   * Right right case: rotate left\n   *\n   *     a                              b\n   *    / \\                            / \\\n   *   c   b   -> rotationRR(a) ->    a   e\n   *      / \\                        / \\\n   *     d   e                      c   d\n   *\n   * @param node Node<T>\n   */\n  rotationRR(node) {\n    const tmp = node.right;\n    node.right = tmp.left;\n    tmp.left = node;\n    return tmp;\n  }\n  /**\n   * Left right case: rotate left then right\n   * @param node Node<T>\n   */\n  rotationLR(node) {\n    node.left = this.rotationRR(node.left);\n    return this.rotationLL(node);\n  }\n  /**\n   * Right left case: rotate right then left\n   * @param node Node<T>\n   */\n  rotationRL(node) {\n    node.right = this.rotationLL(node.right);\n    return this.rotationRR(node);\n  }\n  getBalanceFactor(node) {\n    const heightDifference = this.getNodeHeight(node.left) - this.getNodeHeight(node.right);\n    switch (heightDifference) {\n      case -2:\n        return BalanceFactor.UNBALANCED_RIGHT;\n      case -1:\n        return BalanceFactor.SLIGHTLY_UNBALANCED_RIGHT;\n      case 1:\n        return BalanceFactor.SLIGHTLY_UNBALANCED_LEFT;\n      case 2:\n        return BalanceFactor.UNBALANCED_LEFT;\n      default:\n        return BalanceFactor.BALANCED;\n    }\n  }\n  insert(key) {\n    this.root = this.insertNode(this.root, key);\n  }\n  insertNode(node, key) {\n    if (node == null) {\n      return new Node(key);\n    } else if (this.compareFn(key, node.key) === Compare.LESS_THAN) {\n      node.left = this.insertNode(node.left, key);\n    } else if (this.compareFn(key, node.key) === Compare.BIGGER_THAN) {\n      node.right = this.insertNode(node.right, key);\n    } else {\n      return node; // duplicated key\n    }\n    // verify if tree is balanced\n    const balanceFactor = this.getBalanceFactor(node);\n    if (balanceFactor === BalanceFactor.UNBALANCED_LEFT) {\n      if (this.compareFn(key, node.left.key) === Compare.LESS_THAN) {\n        // Left left case\n        node = this.rotationLL(node);\n      } else {\n        // Left right case\n        return this.rotationLR(node);\n      }\n    }\n    if (balanceFactor === BalanceFactor.UNBALANCED_RIGHT) {\n      if (this.compareFn(key, node.right.key) === Compare.BIGGER_THAN) {\n        // Right right case\n        node = this.rotationRR(node);\n      } else {\n        // Right left case\n        return this.rotationRL(node);\n      }\n    }\n    return node;\n  }\n  removeNode(node, key) {\n    node = super.removeNode(node, key); // {1}\n    if (node == null) {\n      return node;\n    }\n    // verify if tree is balanced\n    const balanceFactor = this.getBalanceFactor(node);\n    if (balanceFactor === BalanceFactor.UNBALANCED_LEFT) {\n      // Left left case\n      if (\n        this.getBalanceFactor(node.left) === BalanceFactor.BALANCED ||\n        this.getBalanceFactor(node.left) === BalanceFactor.SLIGHTLY_UNBALANCED_LEFT\n      ) {\n        return this.rotationLL(node);\n      }\n      // Left right case\n      // eg:\n      //     e                              e                               e\n      //    / \\      rotationRR(node.left) / \\        roationLL(node)      / \\\n      //   c  ...   -> rotationRR(a) ->   c   ...   -> roationLL(c) ->    b   ...\n      //  /                              /                               / \\\n      // a                              b                               a   c\n      //  \\                            /\n      //   b                          a\n      if (this.getBalanceFactor(node.left) === BalanceFactor.SLIGHTLY_UNBALANCED_RIGHT) {\n        return this.rotationLR(node);\n      }\n    }\n    if (balanceFactor === BalanceFactor.UNBALANCED_RIGHT) {\n      // Right right case\n      if (\n        this.getBalanceFactor(node.right) === BalanceFactor.BALANCED ||\n        this.getBalanceFactor(node.right) === BalanceFactor.SLIGHTLY_UNBALANCED_RIGHT\n      ) {\n        return this.rotationRR(node);\n      }\n      // Right left case\n      // eg:\n      //     a                              a                           a\n      //    / \\     rotationLL(node.right) / \\       roationRR(node)   / \\\n      // ...   b    -> rotationLL(d) ->  ...  b   -> roationRR(b) -> ...  c\n      //        \\                              \\                         / \\\n      //        d                               c                       b   d\n      //       /                                 \\\n      //      c                                   d\n      if (this.getBalanceFactor(node.right) === BalanceFactor.SLIGHTLY_UNBALANCED_LEFT) {\n        return this.rotationRL(node);\n      }\n    }\n    return node;\n  }\n}\n","import { Compare, defaultCompare } from '../util';\nimport { Node } from './models/node';\n\nexport default class BinarySearchTree {\n  constructor(compareFn = defaultCompare) {\n    this.compareFn = compareFn;\n    this.root = undefined;\n  }\n  insert(key) {\n    // special case: first key\n    if (this.root == null) {\n      this.root = new Node(key);\n    } else {\n      this.insertNode(this.root, key);\n    }\n  }\n  insertNode(node, key) {\n    if (this.compareFn(key, node.key) === Compare.LESS_THAN) {\n      if (node.left == null) {\n        node.left = new Node(key);\n      } else {\n        this.insertNode(node.left, key);\n      }\n    } else if (node.right == null) {\n      node.right = new Node(key);\n    } else {\n      this.insertNode(node.right, key);\n    }\n  }\n  getRoot() {\n    return this.root;\n  }\n  search(key) {\n    return this.searchNode(this.root, key);\n  }\n  searchNode(node, key) {\n    if (node == null) {\n      return false;\n    }\n    if (this.compareFn(key, node.key) === Compare.LESS_THAN) {\n      return this.searchNode(node.left, key);\n    } else if (this.compareFn(key, node.key) === Compare.BIGGER_THAN) {\n      return this.searchNode(node.right, key);\n    }\n    return true;\n  }\n  inOrderTraverse(callback) {\n    this.inOrderTraverseNode(this.root, callback);\n  }\n  inOrderTraverseNode(node, callback) {\n    if (node != null) {\n      this.inOrderTraverseNode(node.left, callback);\n      callback(node.key);\n      this.inOrderTraverseNode(node.right, callback);\n    }\n  }\n  preOrderTraverse(callback) {\n    this.preOrderTraverseNode(this.root, callback);\n  }\n  preOrderTraverseNode(node, callback) {\n    if (node != null) {\n      callback(node.key);\n      this.preOrderTraverseNode(node.left, callback);\n      this.preOrderTraverseNode(node.right, callback);\n    }\n  }\n  postOrderTraverse(callback) {\n    this.postOrderTraverseNode(this.root, callback);\n  }\n  postOrderTraverseNode(node, callback) {\n    if (node != null) {\n      this.postOrderTraverseNode(node.left, callback);\n      this.postOrderTraverseNode(node.right, callback);\n      callback(node.key);\n    }\n  }\n  min() {\n    return this.minNode(this.root);\n  }\n  minNode(node) {\n    let current = node;\n    while (current != null && current.left != null) {\n      current = current.left;\n    }\n    return current;\n  }\n  max() {\n    return this.maxNode(this.root);\n  }\n  maxNode(node) {\n    let current = node;\n    while (current != null && current.right != null) {\n      current = current.right;\n    }\n    return current;\n  }\n  remove(key) {\n    this.root = this.removeNode(this.root, key);\n  }\n  removeNode(node, key) {\n    if (node == null) {\n      return undefined;\n    }\n    if (this.compareFn(key, node.key) === Compare.LESS_THAN) {\n      node.left = this.removeNode(node.left, key);\n      return node;\n    } else if (this.compareFn(key, node.key) === Compare.BIGGER_THAN) {\n      node.right = this.removeNode(node.right, key);\n      return node;\n    }\n    // key is equal to node.item\n    // handle 3 special conditions\n    // 1 - a leaf node\n    // 2 - a node with only 1 child\n    // 3 - a node with 2 children\n    // case 1\n    if (node.left == null && node.right == null) {\n      node = undefined;\n      return node;\n    }\n    // case 2\n    if (node.left == null) {\n      node = node.right;\n      return node;\n    } else if (node.right == null) {\n      node = node.left;\n      return node;\n    }\n    // case 3\n    const aux = this.minNode(node.right);\n    node.key = aux.key;\n    node.right = this.removeNode(node.right, aux.key);\n    return node;\n  }\n}\n","import { defaultEquals } from '../util';\nimport LinkedList from './linked-list';\nimport { Node } from './models/linked-list-models';\n\nexport default class CircularLinkedList extends LinkedList {\n  constructor(equalsFn = defaultEquals) {\n    super(equalsFn);\n  }\n  push(element) {\n    const node = new Node(element);\n    let current;\n    if (this.head == null) {\n      this.head = node;\n    } else {\n      current = this.getElementAt(this.size() - 1);\n      current.next = node;\n    }\n    // set node.next to head - to have circular list\n    node.next = this.head;\n    this.count++;\n  }\n  insert(element, index) {\n    if (index >= 0 && index <= this.count) {\n      const node = new Node(element);\n      let current = this.head;\n      if (index === 0) {\n        if (this.head == null) {\n          // if no node  in list\n          this.head = node;\n          node.next = this.head;\n        } else {\n          node.next = current;\n          current = this.getElementAt(this.size() - 1);\n          // update last element\n          this.head = node;\n          current.next = this.head;\n        }\n      } else {\n        const previous = this.getElementAt(index - 1);\n        node.next = previous.next;\n        previous.next = node;\n      }\n      this.count++;\n      return true;\n    }\n    return false;\n  }\n  removeAt(index) {\n    if (index >= 0 && index < this.count) {\n      let current = this.head;\n      if (index === 0) {\n        if (this.size() === 1) {\n          this.head = undefined;\n        } else {\n          const removed = this.head;\n          current = this.getElementAt(this.size() - 1);\n          this.head = this.head.next;\n          current.next = this.head;\n          current = removed;\n        }\n      } else {\n        // no need to update last element for circular list\n        const previous = this.getElementAt(index - 1);\n        current = previous.next;\n        previous.next = current.next;\n      }\n      this.count--;\n      return current.element;\n    }\n    return undefined;\n  }\n}\n","// @ts-check\n\nexport default class Deque {\n  constructor() {\n    this.count = 0;\n    this.lowestCount = 0;\n    this.items = {};\n  }\n\n  addFront(element) {\n    if (this.isEmpty()) {\n      this.addBack(element);\n    } else if (this.lowestCount > 0) {\n      this.lowestCount--;\n      this.items[this.lowestCount] = element;\n    } else {\n      for (let i = this.count; i > 0; i--) {\n        this.items[i] = this.items[i - 1];\n      }\n      this.count++;\n      this.items[0] = element;\n    }\n  }\n\n  addBack(element) {\n    this.items[this.count] = element;\n    this.count++;\n  }\n\n  removeFront() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n    const result = this.items[this.lowestCount];\n    delete this.items[this.lowestCount];\n    this.lowestCount++;\n    return result;\n  }\n\n  removeBack() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n    this.count--;\n    const result = this.items[this.count];\n    delete this.items[this.count];\n    return result;\n  }\n\n  peekFront() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n    return this.items[this.lowestCount];\n  }\n\n  peekBack() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n    return this.items[this.count - 1];\n  }\n\n  isEmpty() {\n    return this.size() === 0;\n  }\n\n  clear() {\n    this.items = {};\n    this.count = 0;\n    this.lowestCount = 0;\n  }\n\n  size() {\n    return this.count - this.lowestCount;\n  }\n\n  toString() {\n    if (this.isEmpty()) {\n      return '';\n    }\n    let objString = `${this.items[this.lowestCount]}`;\n    for (let i = this.lowestCount + 1; i < this.count; i++) {\n      objString = `${objString},${this.items[i]}`;\n    }\n    return objString;\n  }\n}\n","import { defaultToString } from '../util';\nimport { ValuePair } from './models/value-pair';\n\nexport default class Dictionary {\n  constructor(toStrFn = defaultToString) {\n    this.toStrFn = toStrFn;\n    this.table = {};\n  }\n  set(key, value) {\n    if (key != null && value != null) {\n      const tableKey = this.toStrFn(key);\n      this.table[tableKey] = new ValuePair(key, value);\n      return true;\n    }\n    return false;\n  }\n  get(key) {\n    const valuePair = this.table[this.toStrFn(key)];\n    return valuePair == null ? undefined : valuePair.value;\n  }\n  hasKey(key) {\n    return this.table[this.toStrFn(key)] != null;\n  }\n  remove(key) {\n    if (this.hasKey(key)) {\n      delete this.table[this.toStrFn(key)];\n      return true;\n    }\n    return false;\n  }\n  values() {\n    return this.keyValues().map(valuePair => valuePair.value);\n  }\n  keys() {\n    return this.keyValues().map(valuePair => valuePair.key);\n  }\n  keyValues() {\n    return Object.values(this.table);\n  }\n  forEach(callbackFn) {\n    const valuePairs = this.keyValues();\n    for (let i = 0; i < valuePairs.length; i++) {\n      const result = callbackFn(valuePairs[i].key, valuePairs[i].value);\n      if (result === false) {\n        break;\n      }\n    }\n  }\n  isEmpty() {\n    return this.size() === 0;\n  }\n  size() {\n    return Object.keys(this.table).length;\n  }\n  clear() {\n    this.table = {};\n  }\n  toString() {\n    if (this.isEmpty()) {\n      return '';\n    }\n    const valuePairs = this.keyValues();\n    let objString = `${valuePairs[0].toString()}`;\n    for (let i = 1; i < valuePairs.length; i++) {\n      objString = `${objString},${valuePairs[i].toString()}`;\n    }\n    return objString;\n  }\n}\n","import { defaultEquals } from '../util';\nimport LinkedList from './linked-list';\nimport { DoublyNode } from './models/linked-list-models';\n\nexport default class DoublyLinkedList extends LinkedList {\n  constructor(equalsFn = defaultEquals) {\n    super(equalsFn);\n    this.tail = undefined;\n  }\n  push(element) {\n    const node = new DoublyNode(element);\n    if (this.head == null) {\n      this.head = node;\n      this.tail = node; // NEW\n    } else {\n      // attach to the tail node // NEW\n      this.tail.next = node;\n      node.prev = this.tail;\n      this.tail = node;\n    }\n    this.count++;\n  }\n  insert(element, index) {\n    if (index >= 0 && index <= this.count) {\n      const node = new DoublyNode(element);\n      let current = this.head;\n      if (index === 0) {\n        if (this.head == null) { // NEW\n          this.head = node;\n          this.tail = node; // NEW\n        } else {\n          node.next = this.head;\n          this.head.prev = node; // NEW\n          this.head = node;\n        }\n      } else if (index === this.count) { // last item NEW\n        current = this.tail;\n        current.next = node;\n        node.prev = current;\n        this.tail = node;\n      } else {\n        const previous = this.getElementAt(index - 1);\n        current = previous.next;\n        node.next = current;\n        previous.next = node;\n        current.prev = node; // NEW\n        node.prev = previous; // NEW\n      }\n      this.count++;\n      return true;\n    }\n    return false;\n  }\n  removeAt(index) {\n    if (index >= 0 && index < this.count) {\n      let current = this.head;\n      if (index === 0) {\n        this.head = this.head.next;\n        // if there is only one item, then we update tail as well //NEW\n        if (this.count === 1) {\n          // {2}\n          this.tail = undefined;\n        } else {\n          this.head.prev = undefined;\n        }\n      } else if (index === this.count - 1) {\n        // last item //NEW\n        current = this.tail;\n        this.tail = current.prev;\n        this.tail.next = undefined;\n      } else {\n        current = this.getElementAt(index);\n        const previous = current.prev;\n        // link previous with current's next - skip it to remove\n        previous.next = current.next;\n        current.next.prev = previous; // NEW\n      }\n      this.count--;\n      return current.element;\n    }\n    return undefined;\n  }\n  indexOf(element) {\n    let current = this.head;\n    let index = 0;\n    while (current != null) {\n      if (this.equalsFn(element, current.element)) {\n        return index;\n      }\n      index++;\n      current = current.next;\n    }\n    return -1;\n  }\n  getHead() {\n    return this.head;\n  }\n  getTail() {\n    return this.tail;\n  }\n  clear() {\n    super.clear();\n    this.tail = undefined;\n  }\n  toString() {\n    if (this.head == null) {\n      return '';\n    }\n    let objString = `${this.head.element}`;\n    let current = this.head.next;\n    while (current != null) {\n      objString = `${objString},${current.element}`;\n      current = current.next;\n    }\n    return objString;\n  }\n  inverseToString() {\n    if (this.tail == null) {\n      return '';\n    }\n    let objString = `${this.tail.element}`;\n    let previous = this.tail.prev;\n    while (previous != null) {\n      objString = `${objString},${previous.element}`;\n      previous = previous.prev;\n    }\n    return objString;\n  }\n}\n","import Dictionary from './dictionary';\n\nexport default class Graph {\n  constructor(isDirected = false) {\n    this.isDirected = isDirected;\n    this.vertices = [];\n    this.adjList = new Dictionary();\n  }\n  addVertex(v) {\n    if (!this.vertices.includes(v)) {\n      this.vertices.push(v);\n      this.adjList.set(v, []); // initialize adjacency list with array as well;\n    }\n  }\n  addEdge(a, b) {\n    if (!this.adjList.get(a)) {\n      this.addVertex(a);\n    }\n    if (!this.adjList.get(b)) {\n      this.addVertex(b);\n    }\n    this.adjList.get(a).push(b);\n    if (this.isDirected !== true) {\n      this.adjList.get(b).push(a);\n    }\n  }\n  getVertices() {\n    return this.vertices;\n  }\n  getAdjList() {\n    return this.adjList;\n  }\n  toString() {\n    let s = '';\n    for (let i = 0; i < this.vertices.length; i++) {\n      s += `${this.vertices[i]} -> `;\n      const neighbors = this.adjList.get(this.vertices[i]);\n      for (let j = 0; j < neighbors.length; j++) {\n        s += `${neighbors[j]} `;\n      }\n      s += '\\n';\n    }\n    return s;\n  }\n}\n","import { defaultToString } from '../util';\nimport { ValuePairLazy } from './models/value-pair-lazy';\n\nexport default class HashTableLinearProbingLazy {\n  constructor(toStrFn = defaultToString) {\n    this.toStrFn = toStrFn;\n    this.table = {};\n  }\n  loseloseHashCode(key) {\n    if (typeof key === 'number') {\n      return key;\n    }\n    const tableKey = this.toStrFn(key);\n    let hash = 0;\n    for (let i = 0; i < tableKey.length; i++) {\n      hash += tableKey.charCodeAt(i);\n    }\n    return hash % 37;\n  }\n  hashCode(key) {\n    return this.loseloseHashCode(key);\n  }\n  put(key, value) {\n    if (key != null && value != null) {\n      const position = this.hashCode(key);\n      if (\n        this.table[position] == null ||\n        (this.table[position] != null && this.table[position].isDeleted)\n      ) {\n        this.table[position] = new ValuePairLazy(key, value);\n      } else {\n        let index = position + 1;\n        while (this.table[index] != null && !this.table[position].isDeleted) {\n          index++;\n        }\n        this.table[index] = new ValuePairLazy(key, value);\n      }\n      return true;\n    }\n    return false;\n  }\n  get(key) {\n    const position = this.hashCode(key);\n    if (this.table[position] != null) {\n      if (this.table[position].key === key && !this.table[position].isDeleted) {\n        return this.table[position].value;\n      }\n      let index = position + 1;\n      while (\n        this.table[index] != null &&\n        (this.table[index].key !== key || this.table[index].isDeleted)\n      ) {\n        if (this.table[index].key === key && this.table[index].isDeleted) {\n          return undefined;\n        }\n        index++;\n      }\n      if (\n        this.table[index] != null &&\n        this.table[index].key === key &&\n        !this.table[index].isDeleted\n      ) {\n        return this.table[position].value;\n      }\n    }\n    return undefined;\n  }\n  remove(key) {\n    const position = this.hashCode(key);\n    if (this.table[position] != null) {\n      if (this.table[position].key === key && !this.table[position].isDeleted) {\n        this.table[position].isDeleted = true;\n        return true;\n      }\n      let index = position + 1;\n      while (\n        this.table[index] != null &&\n        (this.table[index].key !== key || this.table[index].isDeleted)\n      ) {\n        index++;\n      }\n      if (\n        this.table[index] != null &&\n        this.table[index].key === key &&\n        !this.table[index].isDeleted\n      ) {\n        this.table[index].isDeleted = true;\n        return true;\n      }\n    }\n    return false;\n  }\n  isEmpty() {\n    return this.size() === 0;\n  }\n  size() {\n    let count = 0;\n    Object.values(this.table).forEach(valuePair => {\n      count += valuePair.isDeleted === true ? 0 : 1;\n    });\n    return count;\n  }\n  clear() {\n    this.table = {};\n  }\n  getTable() {\n    return this.table;\n  }\n  toString() {\n    if (this.isEmpty()) {\n      return '';\n    }\n    const keys = Object.keys(this.table);\n    let objString = `{${keys[0]} => ${this.table[keys[0]].toString()}}`;\n    for (let i = 1; i < keys.length; i++) {\n      objString = `${objString},{${keys[i]} => ${this.table[\n        keys[i]\n      ].toString()}}`;\n    }\n    return objString;\n  }\n}\n","import { defaultToString } from '../util';\nimport { ValuePair } from './models/value-pair';\n\nexport default class HashTableLinearProbing {\n  constructor(toStrFn = defaultToString) {\n    this.toStrFn = toStrFn;\n    this.table = {};\n  }\n  loseloseHashCode(key) {\n    if (typeof key === 'number') {\n      return key;\n    }\n    const tableKey = this.toStrFn(key);\n    let hash = 0;\n    for (let i = 0; i < tableKey.length; i++) {\n      hash += tableKey.charCodeAt(i);\n    }\n    return hash % 37;\n  }\n  hashCode(key) {\n    return this.loseloseHashCode(key);\n  }\n  put(key, value) {\n    if (key != null && value != null) {\n      const position = this.hashCode(key);\n      if (this.table[position] == null) {\n        this.table[position] = new ValuePair(key, value);\n      } else {\n        let index = position + 1;\n        while (this.table[index] != null) {\n          index++;\n        }\n        this.table[index] = new ValuePair(key, value);\n      }\n      return true;\n    }\n    return false;\n  }\n  get(key) {\n    const position = this.hashCode(key);\n    if (this.table[position] != null) {\n      if (this.table[position].key === key) {\n        return this.table[position].value;\n      }\n      let index = position + 1;\n      while (this.table[index] != null && this.table[index].key !== key) {\n        index++;\n      }\n      if (this.table[index] != null && this.table[index].key === key) {\n        return this.table[index].value;\n      }\n    }\n    return undefined;\n  }\n  remove(key) {\n    const position = this.hashCode(key);\n    if (this.table[position] != null) {\n      if (this.table[position].key === key) {\n        delete this.table[position];\n        this.verifyRemoveSideEffect(key, position);\n        return true;\n      }\n      let index = position + 1;\n      while (this.table[index] != null && this.table[index].key !== key) {\n        index++;\n      }\n      if (this.table[index] != null && this.table[index].key === key) {\n        delete this.table[index];\n        this.verifyRemoveSideEffect(key, index);\n        return true;\n      }\n    }\n    return false;\n  }\n  verifyRemoveSideEffect(key, removedPosition) {\n    const hash = this.hashCode(key);\n    let index = removedPosition + 1;\n    while (this.table[index] != null) {\n      const posHash = this.hashCode(this.table[index].key);\n      if (posHash <= hash || posHash <= removedPosition) {\n        this.table[removedPosition] = this.table[index];\n        delete this.table[index];\n        removedPosition = index;\n      }\n      index++;\n    }\n  }\n  isEmpty() {\n    return this.size() === 0;\n  }\n  size() {\n    return Object.keys(this.table).length;\n  }\n  clear() {\n    this.table = {};\n  }\n  getTable() {\n    return this.table;\n  }\n  toString() {\n    if (this.isEmpty()) {\n      return '';\n    }\n    const keys = Object.keys(this.table);\n    let objString = `{${keys[0]} => ${this.table[keys[0]].toString()}}`;\n    for (let i = 1; i < keys.length; i++) {\n      objString = `${objString},{${keys[i]} => ${this.table[\n        keys[i]\n      ].toString()}}`;\n    }\n    return objString;\n  }\n}\n","import { defaultToString } from '../util';\nimport LinkedList from './linked-list';\nimport { ValuePair } from './models/value-pair';\n\nexport default class HashTableSeparateChaining {\n  constructor(toStrFn = defaultToString) {\n    this.toStrFn = toStrFn;\n    this.table = {};\n  }\n  loseloseHashCode(key) {\n    if (typeof key === 'number') {\n      return key;\n    }\n    const tableKey = this.toStrFn(key);\n    let hash = 0;\n    for (let i = 0; i < tableKey.length; i++) {\n      hash += tableKey.charCodeAt(i);\n    }\n    return hash % 37;\n  }\n  hashCode(key) {\n    return this.loseloseHashCode(key);\n  }\n  put(key, value) {\n    if (key != null && value != null) {\n      const position = this.hashCode(key);\n      if (this.table[position] == null) {\n        this.table[position] = new LinkedList();\n      }\n      this.table[position].push(new ValuePair(key, value));\n      return true;\n    }\n    return false;\n  }\n  get(key) {\n    const position = this.hashCode(key);\n    const linkedList = this.table[position];\n    if (linkedList != null && !linkedList.isEmpty()) {\n      let current = linkedList.getHead();\n      while (current != null) {\n        if (current.element.key === key) {\n          return current.element.value;\n        }\n        current = current.next;\n      }\n    }\n    return undefined;\n  }\n  remove(key) {\n    const position = this.hashCode(key);\n    const linkedList = this.table[position];\n    if (linkedList != null && !linkedList.isEmpty()) {\n      let current = linkedList.getHead();\n      while (current != null) {\n        if (current.element.key === key) {\n          linkedList.remove(current.element);\n          if (linkedList.isEmpty()) {\n            delete this.table[position];\n          }\n          return true;\n        }\n        current = current.next;\n      }\n    }\n    return false;\n  }\n  isEmpty() {\n    return this.size() === 0;\n  }\n  size() {\n    let count = 0;\n    Object.values(this.table).forEach(linkedList => {\n      count += linkedList.size();\n    });\n    return count;\n  }\n  clear() {\n    this.table = {};\n  }\n  getTable() {\n    return this.table;\n  }\n  toString() {\n    if (this.isEmpty()) {\n      return '';\n    }\n    const keys = Object.keys(this.table);\n    let objString = `{${keys[0]} => ${this.table[keys[0]].toString()}}`;\n    for (let i = 1; i < keys.length; i++) {\n      objString = `${objString},{${keys[i]} => ${this.table[\n        keys[i]\n      ].toString()}}`;\n    }\n    return objString;\n  }\n}\n","import { defaultToString } from '../util';\nimport { ValuePair } from './models/value-pair';\n\nexport default class HashTable {\n  constructor(toStrFn = defaultToString) {\n    this.toStrFn = toStrFn;\n    this.table = {};\n  }\n  loseloseHashCode(key) {\n    if (typeof key === 'number') {\n      return key;\n    }\n    const tableKey = this.toStrFn(key);\n    let hash = 0;\n    for (let i = 0; i < tableKey.length; i++) {\n      hash += tableKey.charCodeAt(i);\n    }\n    return hash % 37;\n  }\n  /* djb2HashCode(key) {\n    const tableKey = this.toStrFn(key);\n    let hash = 5381;\n    for (let i = 0; i < tableKey.length; i++) {\n      hash = (hash * 33) + tableKey.charCodeAt(i);\n    }\n    return hash % 1013;\n  } */\n  hashCode(key) {\n    return this.loseloseHashCode(key);\n  }\n  put(key, value) {\n    if (key != null && value != null) {\n      const position = this.hashCode(key);\n      this.table[position] = new ValuePair(key, value);\n      return true;\n    }\n    return false;\n  }\n  get(key) {\n    const valuePair = this.table[this.hashCode(key)];\n    return valuePair == null ? undefined : valuePair.value;\n  }\n  remove(key) {\n    const hash = this.hashCode(key);\n    const valuePair = this.table[hash];\n    if (valuePair != null) {\n      delete this.table[hash];\n      return true;\n    }\n    return false;\n  }\n  getTable() {\n    return this.table;\n  }\n  isEmpty() {\n    return this.size() === 0;\n  }\n  size() {\n    return Object.keys(this.table).length;\n  }\n  clear() {\n    this.table = {};\n  }\n  toString() {\n    if (this.isEmpty()) {\n      return '';\n    }\n    const keys = Object.keys(this.table);\n    let objString = `{${keys[0]} => ${this.table[keys[0]].toString()}}`;\n    for (let i = 1; i < keys.length; i++) {\n      objString = `${objString},{${keys[i]} => ${this.table[keys[i]].toString()}}`;\n    }\n    return objString;\n  }\n}\n","import { Compare, defaultCompare, reverseCompare, swap } from '../util';\n\nexport class MinHeap {\n  constructor(compareFn = defaultCompare) {\n    this.compareFn = compareFn;\n    this.heap = [];\n  }\n  getLeftIndex(index) {\n    return (2 * index) + 1;\n  }\n  getRightIndex(index) {\n    return (2 * index) + 2;\n  }\n  getParentIndex(index) {\n    if (index === 0) {\n      return undefined;\n    }\n    return Math.floor((index - 1) / 2);\n  }\n  size() {\n    return this.heap.length;\n  }\n  isEmpty() {\n    return this.size() <= 0;\n  }\n  clear() {\n    this.heap = [];\n  }\n  findMinimum() {\n    return this.isEmpty() ? undefined : this.heap[0];\n  }\n  insert(value) {\n    if (value != null) {\n      const index = this.heap.length;\n      this.heap.push(value);\n      this.siftUp(index);\n      return true;\n    }\n    return false;\n  }\n  siftDown(index) {\n    let element = index;\n    const left = this.getLeftIndex(index);\n    const right = this.getRightIndex(index);\n    const size = this.size();\n    if (\n      left < size &&\n      this.compareFn(this.heap[element], this.heap[left]) === Compare.BIGGER_THAN\n    ) {\n      element = left;\n    }\n    if (\n      right < size &&\n      this.compareFn(this.heap[element], this.heap[right]) === Compare.BIGGER_THAN\n    ) {\n      element = right;\n    }\n    if (index !== element) {\n      swap(this.heap, index, element);\n      this.siftDown(element);\n    }\n  }\n  siftUp(index) {\n    let parent = this.getParentIndex(index);\n    while (\n      index > 0 &&\n      this.compareFn(this.heap[parent], this.heap[index]) === Compare.BIGGER_THAN\n    ) {\n      swap(this.heap, parent, index);\n      index = parent;\n      parent = this.getParentIndex(index);\n    }\n  }\n  extract() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n    if (this.size() === 1) {\n      return this.heap.shift();\n    }\n    const removedValue = this.heap[0];\n    this.heap[0] = this.heap.pop();\n    this.siftDown(0);\n    return removedValue;\n  }\n  heapify(array) {\n    if (array) {\n      this.heap = array;\n    }\n    const maxIndex = Math.floor(this.size() / 2) - 1;\n    for (let i = maxIndex; i >= 0; i--) {\n      this.siftDown(i);\n    }\n    return this.heap;\n  }\n  getAsArray() {\n    return this.heap;\n  }\n}\nexport class MaxHeap extends MinHeap {\n  constructor(compareFn = defaultCompare) {\n    super(compareFn);\n    this.compareFn = compareFn;\n    this.compareFn = reverseCompare(compareFn);\n  }\n}\n","import { defaultEquals } from '../util';\nimport { Node } from './models/linked-list-models';\n\nexport default class LinkedList {\n  constructor(equalsFn = defaultEquals) {\n    this.equalsFn = equalsFn;\n    this.count = 0;\n    this.head = undefined;\n  }\n  push(element) {\n    const node = new Node(element);\n    let current;\n    if (this.head == null) {\n      // catches null && undefined\n      this.head = node;\n    } else {\n      current = this.head;\n      while (current.next != null) {\n        current = current.next;\n      }\n      current.next = node;\n    }\n    this.count++;\n  }\n  getElementAt(index) {\n    if (index >= 0 && index <= this.count) {\n      let node = this.head;\n      for (let i = 0; i < index && node != null; i++) {\n        node = node.next;\n      }\n      return node;\n    }\n    return undefined;\n  }\n  insert(element, index) {\n    if (index >= 0 && index <= this.count) {\n      const node = new Node(element);\n      if (index === 0) {\n        const current = this.head;\n        node.next = current;\n        this.head = node;\n      } else {\n        const previous = this.getElementAt(index - 1);\n        node.next = previous.next;\n        previous.next = node;\n      }\n      this.count++;\n      return true;\n    }\n    return false;\n  }\n  removeAt(index) {\n    if (index >= 0 && index < this.count) {\n      let current = this.head;\n      if (index === 0) {\n        this.head = current.next;\n      } else {\n        const previous = this.getElementAt(index - 1);\n        current = previous.next;\n        previous.next = current.next;\n      }\n      this.count--;\n      return current.element;\n    }\n    return undefined;\n  }\n  remove(element) {\n    const index = this.indexOf(element);\n    return this.removeAt(index);\n  }\n  indexOf(element) {\n    let current = this.head;\n    for (let i = 0; i < this.size() && current != null; i++) {\n      if (this.equalsFn(element, current.element)) {\n        return i;\n      }\n      current = current.next;\n    }\n    return -1;\n  }\n  isEmpty() {\n    return this.size() === 0;\n  }\n  size() {\n    return this.count;\n  }\n  getHead() {\n    return this.head;\n  }\n  clear() {\n    this.head = undefined;\n    this.count = 0;\n  }\n  toString() {\n    if (this.head == null) {\n      return '';\n    }\n    let objString = `${this.head.element}`;\n    let current = this.head.next;\n    for (let i = 1; i < this.size() && current != null; i++) {\n      objString = `${objString},${current.element}`;\n      current = current.next;\n    }\n    return objString;\n  }\n}\n","export class Node {\n  constructor(element, next) {\n    this.element = element;\n    this.next = next;\n  }\n}\nexport class DoublyNode extends Node {\n  constructor(element, next, prev) {\n    super(element, next);\n    this.prev = prev;\n  }\n}\n","export class Node {\n  constructor(key) {\n    this.key = key;\n    this.left = undefined;\n    this.right = undefined;\n  }\n  toString() {\n    return `${this.key}`;\n  }\n}\n","import { ValuePair } from './value-pair';\n\nexport class ValuePairLazy extends ValuePair {\n  constructor(key, value, isDeleted = false) {\n    super(key, value);\n    this.key = key;\n    this.value = value;\n    this.isDeleted = isDeleted;\n  }\n}\n","export class ValuePair {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n  toString() {\n    return `[#${this.key}: ${this.value}]`;\n  }\n}\n","// @ts-check\n\nexport default class Queue {\n  constructor() {\n    this.count = 0;\n    this.lowestCount = 0;\n    this.items = {};\n  }\n\n  enqueue(element) {\n    this.items[this.count] = element;\n    this.count++;\n  }\n\n  dequeue() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n    const result = this.items[this.lowestCount];\n    delete this.items[this.lowestCount];\n    this.lowestCount++;\n    return result;\n  }\n\n  peek() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n    return this.items[this.lowestCount];\n  }\n\n  isEmpty() {\n    return this.size() === 0;\n  }\n\n  clear() {\n    this.items = {};\n    this.count = 0;\n    this.lowestCount = 0;\n  }\n\n  size() {\n    return this.count - this.lowestCount;\n  }\n\n  toString() {\n    if (this.isEmpty()) {\n      return '';\n    }\n    let objString = `${this.items[this.lowestCount]}`;\n    for (let i = this.lowestCount + 1; i < this.count; i++) {\n      objString = `${objString},${this.items[i]}`;\n    }\n    return objString;\n  }\n}\n","export default class Set {\n  constructor() {\n    this.items = {};\n  }\n  add(element) {\n    if (!this.has(element)) {\n      this.items[element] = element;\n      return true;\n    }\n    return false;\n  }\n  delete(element) {\n    if (this.has(element)) {\n      delete this.items[element];\n      return true;\n    }\n    return false;\n  }\n  has(element) {\n    return Object.prototype.hasOwnProperty.call(this.items, element);\n  }\n  values() {\n    return Object.values(this.items);\n  }\n  union(otherSet) {\n    const unionSet = new Set();\n    this.values().forEach(value => unionSet.add(value));\n    otherSet.values().forEach(value => unionSet.add(value));\n    return unionSet;\n  }\n  intersection(otherSet) {\n    const intersectionSet = new Set();\n    const values = this.values();\n    const otherValues = otherSet.values();\n    let biggerSet = values;\n    let smallerSet = otherValues;\n    if (otherValues.length - values.length > 0) {\n      biggerSet = otherValues;\n      smallerSet = values;\n    }\n    smallerSet.forEach(value => {\n      if (biggerSet.includes(value)) {\n        intersectionSet.add(value);\n      }\n    });\n    return intersectionSet;\n  }\n  difference(otherSet) {\n    const differenceSet = new Set();\n    this.values().forEach(value => {\n      if (!otherSet.has(value)) {\n        differenceSet.add(value);\n      }\n    });\n    return differenceSet;\n  }\n  isSubsetOf(otherSet) {\n    if (this.size() > otherSet.size()) {\n      return false;\n    }\n    let isSubset = true;\n    this.values().every(value => {\n      if (!otherSet.has(value)) {\n        isSubset = false;\n        return false;\n      }\n      return true;\n    });\n    return isSubset;\n  }\n  isEmpty() {\n    return this.size() === 0;\n  }\n  size() {\n    return Object.keys(this.items).length;\n  }\n  clear() {\n    this.items = {};\n  }\n  toString() {\n    if (this.isEmpty()) {\n      return '';\n    }\n    const values = this.values();\n    let objString = `${values[0]}`;\n    for (let i = 1; i < values.length; i++) {\n      objString = `${objString},${values[i].toString()}`;\n    }\n    return objString;\n  }\n}\n","import { Compare, defaultCompare, defaultEquals } from '../util';\nimport LinkedList from './linked-list';\n\nexport default class SortedLinkedList extends LinkedList {\n  constructor(equalsFn = defaultEquals, compareFn = defaultCompare) {\n    super(equalsFn);\n    this.equalsFn = equalsFn;\n    this.compareFn = compareFn;\n  }\n  push(element) {\n    if (this.isEmpty()) {\n      super.push(element);\n    } else {\n      const index = this.getIndexNextSortedElement(element);\n      super.insert(element, index);\n    }\n  }\n  insert(element, index = 0) {\n    if (this.isEmpty()) {\n      return super.insert(element, index === 0 ? index : 0);\n    }\n    const pos = this.getIndexNextSortedElement(element);\n    return super.insert(element, pos);\n  }\n  getIndexNextSortedElement(element) {\n    let current = this.head;\n    let i = 0;\n    for (; i < this.size() && current; i++) {\n      const comp = this.compareFn(element, current.element);\n      if (comp === Compare.LESS_THAN) {\n        return i;\n      }\n      current = current.next;\n    }\n    return i;\n  }\n}\n","// @ts-check\n\nexport default class StackArray {\n  constructor() {\n    this.items = [];\n  }\n  push(element) {\n    this.items.push(element);\n  }\n\n  pop() {\n    return this.items.pop();\n  }\n\n  peek() {\n    return this.items[this.items.length - 1];\n  }\n\n  isEmpty() {\n    return this.items.length === 0;\n  }\n\n  size() {\n    return this.items.length;\n  }\n\n  clear() {\n    this.items = [];\n  }\n\n  toArray() {\n    return this.items;\n  }\n\n  toString() {\n    return this.items.toString();\n  }\n}\n","import DoublyLinkedList from './doubly-linked-list';\n\nexport default class StackLinkedList {\n  constructor() {\n    this.items = new DoublyLinkedList();\n  }\n  push(element) {\n    this.items.push(element);\n  }\n  pop() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n    const result = this.items.removeAt(this.size() - 1);\n    return result;\n  }\n  peek() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n    return this.items.getElementAt(this.size() - 1).element;\n  }\n  isEmpty() {\n    return this.items.isEmpty();\n  }\n  size() {\n    return this.items.size();\n  }\n  clear() {\n    this.items.clear();\n  }\n  toString() {\n    return this.items.toString();\n  }\n}\n","// @ts-check\n\nexport default class Stack {\n  constructor() {\n    this.count = 0;\n    this.items = {};\n  }\n  push(element) {\n    this.items[this.count] = element;\n    this.count++;\n  }\n  pop() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n    this.count--;\n    const result = this.items[this.count];\n    delete this.items[this.count];\n    return result;\n  }\n  peek() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n    return this.items[this.count - 1];\n  }\n  isEmpty() {\n    return this.count === 0;\n  }\n  size() {\n    return this.count;\n  }\n  clear() {\n    /* while (!this.isEmpty()) {\n        this.pop();\n      } */\n    this.items = {};\n    this.count = 0;\n  }\n  toString() {\n    if (this.isEmpty()) {\n      return '';\n    }\n    let objString = `${this.items[0]}`;\n    for (let i = 1; i < this.count; i++) {\n      objString = `${objString},${this.items[i]}`;\n    }\n    return objString;\n  }\n}\n","import * as _util from \"./util.js\";\n\n// chapters 05 and 07\nexport const util = _util;\n\n// chapter 03\nexport { default as StackArray } from \"./data-structures/stack-array\";\nexport { default as Stack } from \"./data-structures/stack\";\nexport { hanoi } from \"./others/hanoi\";\nexport { hanoiStack } from \"./others/hanoi\";\nexport { baseConverter } from \"./others/base-converter\";\nexport { decimalToBinary } from \"./others/base-converter\";\nexport { parenthesesChecker } from \"./others/balanced-symbols\";\n\n// chapter 04\nexport { default as Queue } from \"./data-structures/queue\";\nexport { default as Deque } from \"./data-structures/deque\";\nexport { hotPotato } from \"./others/hot-potato\";\nexport { palindromeChecker } from \"./others/palindrome-checker\";\n\n// chapter 05\nexport { default as LinkedList } from \"./data-structures/linked-list\";\nexport { default as DoublyLinkedList } from \"./data-structures/doubly-linked-list\";\nexport { default as CircularLinkedList } from \"./data-structures/circular-linked-list\";\nexport { default as SortedLinkedList } from \"./data-structures/sorted-linked-list\";\nexport { default as StackLinkedList } from \"./data-structures/stack-linked-list\";\n\n// chapter 06\nexport { default as Set } from \"./data-structures/set\";\n\n// chapter 07\nexport { default as Dictionary } from \"./data-structures/dictionary\";\nexport { default as HashTable } from \"./data-structures/hash-table\";\nexport { default as HashTableSeparateChaining } from \"./data-structures/hash-table-separate-chaining\";\nexport { default as HashTableLinearProbing } from \"./data-structures/hash-table-linear-probing\";\nexport { default as HashTableLinearProbingLazy } from \"./data-structures/hash-table-linear-probing-lazy\";\n\n// chapter 08\nexport { default as factorialIterative } from \"./others/factorial\";\nexport { default as factorial } from \"./others/factorial\";\nexport { default as fibonacci } from \"./others/fibonacci\";\nexport { default as fibonacciIterative } from \"./others/fibonacci\";\nexport { default as fibonacciMemoization } from \"./others/fibonacci\";\n\n// chapter 09\nexport { default as BinarySearchTree } from \"./data-structures/binary-search-tree\";\nexport { default as AVLTree } from \"./data-structures/avl-tree\";\n\n// chapter 10\nexport { MinHeap } from \"./data-structures/heap\";\nexport { MaxHeap } from \"./data-structures/heap\";\nexport { default as heapSort } from \"./algorithms/sorting/heap-sort\";\n\n// chapter 11\nexport { default as Graph } from \"./data-structures/graph\";\nexport { breadthFirstSearch } from \"./algorithms/graph/breadth-first-search\";\nexport { BFS } from \"./algorithms/graph/breadth-first-search\";\nexport { depthFirstSearch } from \"./algorithms/graph/depth-first-search\";\nexport { DFS } from \"./algorithms/graph/depth-first-search\";\nexport { dijkstra } from \"./algorithms/graph/dijkstra\";\nexport { floydWarshall } from \"./algorithms/graph/floyd-warshall\";\nexport { prim } from \"./algorithms/graph/prim\";\nexport { kruskal } from \"./algorithms/graph/kruskal\";\n\n// chapter 12\nexport { shuffle } from \"./algorithms/shuffle/fisher–yates\";\n\nexport { bubbleSort } from \"./algorithms/sorting/bubble-sort\";\nexport { modifiedBubbleSort } from \"./algorithms/sorting/bubble-sort-improved\";\nexport { bucketSort } from \"./algorithms/sorting/bucket-sort\";\nexport { countingSort } from \"./algorithms/sorting/counting-sort\";\nexport { insertionSort } from \"./algorithms/sorting/insertion-sort\";\nexport { mergeSort } from \"./algorithms/sorting/merge-sort\";\nexport { quickSort } from \"./algorithms/sorting/quicksort\";\nexport { radixSort } from \"./algorithms/sorting/radix-sort\";\nexport { selectionSort } from \"./algorithms/sorting/selection-sort\";\nexport { shellSort } from \"./algorithms/sorting/shell-sort\";\n\nexport { binarySearch } from \"./algorithms/search/binary-search\";\nexport { interpolationSearch } from \"./algorithms/search/interpolation-search\";\nexport { sequentialSearch } from \"./algorithms/search/sequential-search\";\nexport { findMaxValue } from \"./algorithms/search/min-max-search\";\nexport { findMinValue } from \"./algorithms/search/min-max-search\";\n\n// chapter 14\nexport { binarySearch as binarySearchRecursive } from \"./algorithms/search/binary-search-recursive\";\nexport { minCoinChange } from \"./algorithms/dynamic-programing/min-coin-change\";\nexport { minCoinChange as minCoinChangeGreedy } from \"./algorithms/greedy/min-coin-change\";\nexport { knapSack } from \"./algorithms/dynamic-programing/knapsack\";\nexport { knapSack as knapSackRecursive } from \"./algorithms/dynamic-programing/knapsack-recursive\";\nexport { knapSack as knapSackGreedy } from \"./algorithms/greedy/knapsack\";\nexport { lcs } from \"./algorithms/dynamic-programing/longest-common-subsequence\";\nexport { lcs as lcsPrint } from \"./algorithms/dynamic-programing/longest-common-subsequence-print\";\nexport { lcs as lcsRecursive } from \"./algorithms/greedy/longest-common-subsequence\";\nexport { matrixChainOrder } from \"./algorithms/dynamic-programing/matrix-chain-multiplication\";\nexport { matrixChainOrder as matrixChainOrderGreedy } from \"./algorithms/greedy/matrix-chain-multiplication\";\nexport { ratInAMaze } from \"./algorithms/backtracking/rat-in-maze\";\nexport { sudokuSolver } from \"./algorithms/backtracking/sudoku-solver\";\n","// @ts-check\nimport Stack from '../data-structures/stack';\n\nexport function parenthesesChecker(symbols) {\n  const stack = new Stack();\n  const opens = '([{';\n  const closers = ')]}';\n  let balanced = true;\n  let index = 0;\n  let symbol;\n  let top;\n\n  while (index < symbols.length && balanced) {\n    symbol = symbols[index];\n    if (opens.indexOf(symbol) >= 0) {\n      stack.push(symbol);\n    } else if (stack.isEmpty()) {\n      balanced = false;\n    } else {\n      top = stack.pop();\n      if (!(opens.indexOf(top) === closers.indexOf(symbol))) {\n        balanced = false;\n      }\n    }\n    index++;\n  }\n  return balanced && stack.isEmpty();\n}\n","// @ts-check\nimport Stack from '../data-structures/stack';\n\nexport function decimalToBinary(decNumber) {\n  const remStack = new Stack();\n  let number = decNumber;\n  let rem;\n  let binaryString = '';\n\n  while (number > 0) {\n    rem = Math.floor(number % 2);\n    remStack.push(rem);\n    number = Math.floor(number / 2);\n  }\n\n  while (!remStack.isEmpty()) {\n    binaryString += remStack.pop().toString();\n  }\n\n  return binaryString;\n}\n\nexport function baseConverter(decNumber, base) {\n  const remStack = new Stack();\n  const digits = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let number = decNumber;\n  let rem;\n  let baseString = '';\n\n  if (!(base >= 2 && base <= 36)) {\n    return '';\n  }\n\n  while (number > 0) {\n    rem = Math.floor(number % base);\n    remStack.push(rem);\n    number = Math.floor(number / base);\n  }\n\n  while (!remStack.isEmpty()) {\n    baseString += digits[remStack.pop()];\n  }\n\n  return baseString;\n}\n","export function factorialIterative(number) {\n  if (number < 0) {\n    return undefined;\n  }\n  let total = 1;\n  for (let n = number; n > 1; n--) {\n    total *= n;\n  }\n  return total;\n}\n\nexport function factorial(n) {\n  if (n < 0) {\n    return undefined;\n  }\n  if (n === 1 || n === 0) {\n    return 1;\n  }\n  return n * factorial(n - 1);\n}\n","export function fibonacci(n) {\n  if (n < 1) {\n    return 0;\n  }\n  if (n <= 2) {\n    return 1;\n  }\n  return fibonacci(n - 1) + fibonacci(n - 2);\n}\n\nexport function fibonacciIterative(n) {\n  if (n < 1) { return 0; }\n  let fibNMinus2 = 0;\n  let fibNMinus1 = 1;\n  let fibN = n;\n  for (let i = 2; i <= n; i++) {\n    fibN = fibNMinus1 + fibNMinus2;\n    fibNMinus2 = fibNMinus1;\n    fibNMinus1 = fibN;\n  }\n  return fibN;\n}\n\nexport function fibonacciMemoization(n) {\n  if (n < 1) { return 0; }\n  const memo = [0, 1];\n  const fibonacciMem = num => {\n    if (memo[num] != null) { return memo[num]; }\n    return (memo[num] = fibonacciMem(num - 1) + fibonacciMem(num - 2));\n  };\n  return fibonacciMem(n);\n}\n","// @ts-check\nimport Stack from '../data-structures/stack';\n\nfunction towerOfHanoi(plates, source, helper, dest, sourceName, helperName, destName, moves = []) {\n  if (plates <= 0) {\n    return moves;\n  }\n  if (plates === 1) {\n    dest.push(source.pop());\n    const move = {};\n    move[sourceName] = source.toString();\n    move[helperName] = helper.toString();\n    move[destName] = dest.toString();\n    moves.push(move);\n  } else {\n    towerOfHanoi(plates - 1, source, dest, helper, sourceName, destName, helperName, moves);\n    dest.push(source.pop());\n    const move = {};\n    move[sourceName] = source.toString();\n    move[helperName] = helper.toString();\n    move[destName] = dest.toString();\n    moves.push(move);\n    towerOfHanoi(plates - 1, helper, source, dest, helperName, sourceName, destName, moves);\n  }\n  return moves;\n}\n\nexport function hanoiStack(plates) {\n  const source = new Stack();\n  const dest = new Stack();\n  const helper = new Stack();\n\n  for (let i = plates; i > 0; i--) {\n    source.push(i);\n  }\n\n  return towerOfHanoi(plates, source, helper, dest, 'source', 'helper', 'dest');\n}\n\nexport function hanoi(plates, source, helper, dest, moves = []) {\n  if (plates <= 0) {\n    return moves;\n  }\n  if (plates === 1) {\n    moves.push([source, dest]);\n  } else {\n    hanoi(plates - 1, source, dest, helper, moves);\n    moves.push([source, dest]);\n    hanoi(plates - 1, helper, source, dest, moves);\n  }\n  return moves;\n}\n","import Queue from '../data-structures/queue';\n\nexport function hotPotato(elementsList, num) {\n  const queue = new Queue();\n  const eliminatedList = [];\n\n  for (let i = 0; i < elementsList.length; i++) {\n    queue.enqueue(elementsList[i]);\n  }\n\n  while (queue.size() > 1) {\n    for (let i = 0; i < num; i++) {\n      queue.enqueue(queue.dequeue());\n    }\n    eliminatedList.push(queue.dequeue());\n  }\n\n  return {\n    eliminated: eliminatedList,\n    winner: queue.dequeue()\n  };\n}\n","import Deque from '../data-structures/deque';\n\nexport function palindromeChecker(aString) {\n  if (\n    aString === undefined ||\n    aString === null ||\n    (aString !== null && aString.length === 0)\n  ) {\n    return false;\n  }\n  const deque = new Deque();\n  const lowerString = aString.toLocaleLowerCase().split(' ').join('');\n  let firstChar;\n  let lastChar;\n\n  for (let i = 0; i < lowerString.length; i++) {\n    deque.addBack(lowerString.charAt(i));\n  }\n\n  while (deque.size() > 1) {\n    firstChar = deque.removeFront();\n    lastChar = deque.removeBack();\n    if (firstChar !== lastChar) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","export const Compare = {\n  LESS_THAN: -1,\n  BIGGER_THAN: 1,\n  EQUALS: 0\n};\n\nexport const DOES_NOT_EXIST = -1;\n\nexport function lesserEquals(a, b, compareFn) {\n  const comp = compareFn(a, b);\n  return comp === Compare.LESS_THAN || comp === Compare.EQUALS;\n}\n\nexport function biggerEquals(a, b, compareFn) {\n  const comp = compareFn(a, b);\n  return comp === Compare.BIGGER_THAN || comp === Compare.EQUALS;\n}\n\nexport function defaultCompare(a, b) {\n  if (a === b) {\n    return Compare.EQUALS;\n  }\n  return a < b ? Compare.LESS_THAN : Compare.BIGGER_THAN;\n}\n\nexport function defaultEquals(a, b) {\n  return a === b;\n}\n\nexport function defaultToString(item) {\n  if (item === null) {\n    return 'NULL';\n  } else if (item === undefined) {\n    return 'UNDEFINED';\n  } else if (typeof item === 'string' || item instanceof String) {\n    return `${item}`;\n  }\n  return item.toString();\n}\n\nexport function swap(array, a, b) {\n  /* const temp = array[a];\n  array[a] = array[b];\n  array[b] = temp; */\n  [array[a], array[b]] = [array[b], array[a]];\n}\nexport function reverseCompare(compareFn) {\n  return (a, b) => compareFn(b, a);\n}\n\nexport function defaultDiff(a, b) {\n  return Number(a) - Number(b);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/js/index.js\");\n",""],"names":["ratInAMaze","isSafe","maze","x","y","n","length","findPath","solution","i","j","sudokuSolver","UNASSIGNED","usedInRow","matrix","row","num","col","usedInCol","usedInBox","boxStartRow","boxStartCol","solveSudoku","checkBlankSpaces","knapSack","capacity","weights","values","a","b","findValues","kS","k","console","log","w","lcs","printSolution","wordX","m","answer","wordY","l","matrixChainOrder","printOptimalParenthesis","s","p","z","Number","MAX_SAFE_INTEGER","q","minCoinChange","coins","amount","cache","makeChange","value","min","newMin","newAmount","coin","concat","Colors","WHITE","GREY","BLACK","initializeColor","color","vertices","breadthFirstSearch","graph","startVertex","callback","getVertices","adjList","getAdjList","queue","Queue","enqueue","isEmpty","u","dequeue","neighbors","get","BFS","distances","predecessors","depthFirstSearchVisit","depthFirstSearch","DFSVisit","d","f","time","count","DFS","discovery","finished","INF","minDistance","dist","visited","minIndex","v","dijkstra","src","floydWarshall","isFinite","Infinity","find","parent","union","initializeCost","cost","kruskal","ne","minKey","key","prim","load","val","r","change","total","push","binarySearch","binarySearchRecursive","array","low","high","compareFn","defaultCompare","mid","Math","floor","element","Compare","LESS_THAN","BIGGER_THAN","DOES_NOT_EXIST","sortedArray","interpolationSearch","equalsFn","defaultEquals","diffFn","defaultDiff","position","delta","arr","findMaxValue","findMinValue","max","undefined","sequentialSearch","shuffle","currentIndex","randomIndex","random","modifiedBubbleSort","bubbleSort","bucketSort","createBuckets","bucketSize","minValue","maxValue","bucketCount","buckets","sortBuckets","countingSort","sortedIndex","counts","Array","forEach","heapSort","heapify","index","heapSize","largest","left","right","buildMaxHeap","insertionSort","temp","mergeSort","merge","result","slice","middle","quickSort","partition","pivotIdx","pivot","quick","radixSort","getBucketIndex","significantDigit","radixBase","countingSortForRadix","bucketsIndex","aux","selectionSort","indexMin","shellSort","increment","BalanceFactor","UNBALANCED_RIGHT","SLIGHTLY_UNBALANCED_RIGHT","BALANCED","SLIGHTLY_UNBALANCED_LEFT","UNBALANCED_LEFT","AVLTree","root","node","getNodeHeight","tmp","rotationRR","rotationLL","heightDifference","insertNode","Node","balanceFactor","getBalanceFactor","rotationLR","rotationRL","BinarySearchTree","searchNode","inOrderTraverseNode","preOrderTraverseNode","postOrderTraverseNode","minNode","current","maxNode","removeNode","CircularLinkedList","head","getElementAt","size","next","previous","removed","LinkedList","Deque","lowestCount","items","addBack","objString","Dictionary","toStrFn","defaultToString","table","tableKey","ValuePair","valuePair","hasKey","keyValues","map","Object","callbackFn","valuePairs","keys","toString","DoublyLinkedList","tail","DoublyNode","prev","Graph","isDirected","includes","set","addVertex","HashTableLinearProbingLazy","hash","charCodeAt","loseloseHashCode","hashCode","isDeleted","ValuePairLazy","HashTableLinearProbing","verifyRemoveSideEffect","removedPosition","posHash","HashTableSeparateChaining","linkedList","getHead","remove","HashTable","MinHeap","heap","siftUp","getLeftIndex","getRightIndex","siftDown","getParentIndex","shift","removedValue","pop","maxIndex","MaxHeap","indexOf","removeAt","Set","has","prototype","hasOwnProperty","call","otherSet","unionSet","add","intersectionSet","otherValues","biggerSet","smallerSet","differenceSet","isSubset","every","SortedLinkedList","getIndexNextSortedElement","pos","comp","StackArray","StackLinkedList","clear","Stack","default","hanoi","hanoiStack","baseConverter","decimalToBinary","parenthesesChecker","hotPotato","palindromeChecker","_util","util","symbols","stack","opens","closers","balanced","symbol","top","decNumber","remStack","number","rem","binaryString","base","digits","baseString","factorialIterative","factorial","fibonacci","fibonacciIterative","fibonacciMemoization","fibNMinus2","fibNMinus1","fibN","memo","fibonacciMem","towerOfHanoi","plates","source","helper","dest","sourceName","helperName","destName","moves","move","elementsList","eliminatedList","eliminated","winner","aString","deque","lowerString","toLocaleLowerCase","split","join","firstChar","lastChar","charAt","removeFront","removeBack","lesserEquals","biggerEquals","swap","reverseCompare","EQUALS","item","String"],"sourceRoot":""}